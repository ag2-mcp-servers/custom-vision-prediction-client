# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T05:08:44+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field


class BoundingBox(BaseModel):
    height: float = Field(..., description='Height.')
    left: float = Field(..., description='Coordinate of the left boundary.')
    top: float = Field(..., description='Coordinate of the top boundary.')
    width: float = Field(..., description='Width.')


class Code(Enum):
    NoError = 'NoError'
    BadRequest = 'BadRequest'
    BadRequestExceededBatchSize = 'BadRequestExceededBatchSize'
    BadRequestNotSupported = 'BadRequestNotSupported'
    BadRequestInvalidIds = 'BadRequestInvalidIds'
    BadRequestProjectName = 'BadRequestProjectName'
    BadRequestProjectNameNotUnique = 'BadRequestProjectNameNotUnique'
    BadRequestProjectDescription = 'BadRequestProjectDescription'
    BadRequestProjectUnknownDomain = 'BadRequestProjectUnknownDomain'
    BadRequestProjectUnknownClassification = 'BadRequestProjectUnknownClassification'
    BadRequestProjectUnsupportedDomainTypeChange = (
        'BadRequestProjectUnsupportedDomainTypeChange'
    )
    BadRequestProjectUnsupportedExportPlatform = (
        'BadRequestProjectUnsupportedExportPlatform'
    )
    BadRequestIterationName = 'BadRequestIterationName'
    BadRequestIterationNameNotUnique = 'BadRequestIterationNameNotUnique'
    BadRequestIterationDescription = 'BadRequestIterationDescription'
    BadRequestIterationIsNotTrained = 'BadRequestIterationIsNotTrained'
    BadRequestWorkspaceCannotBeModified = 'BadRequestWorkspaceCannotBeModified'
    BadRequestWorkspaceNotDeletable = 'BadRequestWorkspaceNotDeletable'
    BadRequestTagName = 'BadRequestTagName'
    BadRequestTagNameNotUnique = 'BadRequestTagNameNotUnique'
    BadRequestTagDescription = 'BadRequestTagDescription'
    BadRequestTagType = 'BadRequestTagType'
    BadRequestMultipleNegativeTag = 'BadRequestMultipleNegativeTag'
    BadRequestImageTags = 'BadRequestImageTags'
    BadRequestImageRegions = 'BadRequestImageRegions'
    BadRequestNegativeAndRegularTagOnSameImage = (
        'BadRequestNegativeAndRegularTagOnSameImage'
    )
    BadRequestRequiredParamIsNull = 'BadRequestRequiredParamIsNull'
    BadRequestIterationIsPublished = 'BadRequestIterationIsPublished'
    BadRequestInvalidPublishName = 'BadRequestInvalidPublishName'
    BadRequestInvalidPublishTarget = 'BadRequestInvalidPublishTarget'
    BadRequestUnpublishFailed = 'BadRequestUnpublishFailed'
    BadRequestSubscriptionApi = 'BadRequestSubscriptionApi'
    BadRequestExceedProjectLimit = 'BadRequestExceedProjectLimit'
    BadRequestExceedIterationPerProjectLimit = (
        'BadRequestExceedIterationPerProjectLimit'
    )
    BadRequestExceedTagPerProjectLimit = 'BadRequestExceedTagPerProjectLimit'
    BadRequestExceedTagPerImageLimit = 'BadRequestExceedTagPerImageLimit'
    BadRequestExceededQuota = 'BadRequestExceededQuota'
    BadRequestCannotMigrateProjectWithName = 'BadRequestCannotMigrateProjectWithName'
    BadRequestNotLimitedTrial = 'BadRequestNotLimitedTrial'
    BadRequestImageBatch = 'BadRequestImageBatch'
    BadRequestImageStream = 'BadRequestImageStream'
    BadRequestImageUrl = 'BadRequestImageUrl'
    BadRequestImageFormat = 'BadRequestImageFormat'
    BadRequestImageSizeBytes = 'BadRequestImageSizeBytes'
    BadRequestImageExceededCount = 'BadRequestImageExceededCount'
    BadRequestTrainingNotNeeded = 'BadRequestTrainingNotNeeded'
    BadRequestTrainingNotNeededButTrainingPipelineUpdated = (
        'BadRequestTrainingNotNeededButTrainingPipelineUpdated'
    )
    BadRequestTrainingValidationFailed = 'BadRequestTrainingValidationFailed'
    BadRequestClassificationTrainingValidationFailed = (
        'BadRequestClassificationTrainingValidationFailed'
    )
    BadRequestMultiClassClassificationTrainingValidationFailed = (
        'BadRequestMultiClassClassificationTrainingValidationFailed'
    )
    BadRequestMultiLabelClassificationTrainingValidationFailed = (
        'BadRequestMultiLabelClassificationTrainingValidationFailed'
    )
    BadRequestDetectionTrainingValidationFailed = (
        'BadRequestDetectionTrainingValidationFailed'
    )
    BadRequestTrainingAlreadyInProgress = 'BadRequestTrainingAlreadyInProgress'
    BadRequestDetectionTrainingNotAllowNegativeTag = (
        'BadRequestDetectionTrainingNotAllowNegativeTag'
    )
    BadRequestInvalidEmailAddress = 'BadRequestInvalidEmailAddress'
    BadRequestDomainNotSupportedForAdvancedTraining = (
        'BadRequestDomainNotSupportedForAdvancedTraining'
    )
    BadRequestExportPlatformNotSupportedForAdvancedTraining = (
        'BadRequestExportPlatformNotSupportedForAdvancedTraining'
    )
    BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining = (
        'BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining'
    )
    BadRequestExportValidationFailed = 'BadRequestExportValidationFailed'
    BadRequestExportAlreadyInProgress = 'BadRequestExportAlreadyInProgress'
    BadRequestPredictionIdsMissing = 'BadRequestPredictionIdsMissing'
    BadRequestPredictionIdsExceededCount = 'BadRequestPredictionIdsExceededCount'
    BadRequestPredictionTagsExceededCount = 'BadRequestPredictionTagsExceededCount'
    BadRequestPredictionResultsExceededCount = (
        'BadRequestPredictionResultsExceededCount'
    )
    BadRequestPredictionInvalidApplicationName = (
        'BadRequestPredictionInvalidApplicationName'
    )
    BadRequestPredictionInvalidQueryParameters = (
        'BadRequestPredictionInvalidQueryParameters'
    )
    BadRequestInvalid = 'BadRequestInvalid'
    UnsupportedMediaType = 'UnsupportedMediaType'
    Forbidden = 'Forbidden'
    ForbiddenUser = 'ForbiddenUser'
    ForbiddenUserResource = 'ForbiddenUserResource'
    ForbiddenUserSignupDisabled = 'ForbiddenUserSignupDisabled'
    ForbiddenUserSignupAllowanceExceeded = 'ForbiddenUserSignupAllowanceExceeded'
    ForbiddenUserDoesNotExist = 'ForbiddenUserDoesNotExist'
    ForbiddenUserDisabled = 'ForbiddenUserDisabled'
    ForbiddenUserInsufficientCapability = 'ForbiddenUserInsufficientCapability'
    ForbiddenDRModeEnabled = 'ForbiddenDRModeEnabled'
    ForbiddenInvalid = 'ForbiddenInvalid'
    NotFound = 'NotFound'
    NotFoundProject = 'NotFoundProject'
    NotFoundProjectDefaultIteration = 'NotFoundProjectDefaultIteration'
    NotFoundIteration = 'NotFoundIteration'
    NotFoundIterationPerformance = 'NotFoundIterationPerformance'
    NotFoundTag = 'NotFoundTag'
    NotFoundImage = 'NotFoundImage'
    NotFoundDomain = 'NotFoundDomain'
    NotFoundApimSubscription = 'NotFoundApimSubscription'
    NotFoundInvalid = 'NotFoundInvalid'
    Conflict = 'Conflict'
    ConflictInvalid = 'ConflictInvalid'
    ErrorUnknown = 'ErrorUnknown'
    ErrorProjectInvalidWorkspace = 'ErrorProjectInvalidWorkspace'
    ErrorProjectInvalidPipelineConfiguration = (
        'ErrorProjectInvalidPipelineConfiguration'
    )
    ErrorProjectInvalidDomain = 'ErrorProjectInvalidDomain'
    ErrorProjectTrainingRequestFailed = 'ErrorProjectTrainingRequestFailed'
    ErrorProjectExportRequestFailed = 'ErrorProjectExportRequestFailed'
    ErrorFeaturizationServiceUnavailable = 'ErrorFeaturizationServiceUnavailable'
    ErrorFeaturizationQueueTimeout = 'ErrorFeaturizationQueueTimeout'
    ErrorFeaturizationInvalidFeaturizer = 'ErrorFeaturizationInvalidFeaturizer'
    ErrorFeaturizationAugmentationUnavailable = (
        'ErrorFeaturizationAugmentationUnavailable'
    )
    ErrorFeaturizationUnrecognizedJob = 'ErrorFeaturizationUnrecognizedJob'
    ErrorFeaturizationAugmentationError = 'ErrorFeaturizationAugmentationError'
    ErrorExporterInvalidPlatform = 'ErrorExporterInvalidPlatform'
    ErrorExporterInvalidFeaturizer = 'ErrorExporterInvalidFeaturizer'
    ErrorExporterInvalidClassifier = 'ErrorExporterInvalidClassifier'
    ErrorPredictionServiceUnavailable = 'ErrorPredictionServiceUnavailable'
    ErrorPredictionModelNotFound = 'ErrorPredictionModelNotFound'
    ErrorPredictionModelNotCached = 'ErrorPredictionModelNotCached'
    ErrorPrediction = 'ErrorPrediction'
    ErrorPredictionStorage = 'ErrorPredictionStorage'
    ErrorRegionProposal = 'ErrorRegionProposal'
    ErrorInvalid = 'ErrorInvalid'


class CustomVisionError(BaseModel):
    code: Code = Field(..., description='The error code.')
    message: str = Field(
        ..., description='A message explaining the error reported by the service.'
    )


class ImageUrl(BaseModel):
    url: str = Field(..., description='Url of the image.')


class Prediction(BaseModel):
    boundingBox: Optional[BoundingBox] = None
    probability: Optional[float] = Field(None, description='Probability of the tag.')
    tagId: Optional[UUID] = Field(None, description='Id of the predicted tag.')
    tagName: Optional[str] = Field(None, description='Name of the predicted tag.')


class FieldProjectIdClassifyIterationsPublishedNameImagePostRequest(BaseModel):
    imageData: bytes = Field(
        ...,
        description='Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.',
    )


class FieldProjectIdClassifyIterationsPublishedNameImageNostorePostRequest(BaseModel):
    imageData: bytes = Field(
        ...,
        description='Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB.',
    )


class FieldProjectIdDetectIterationsPublishedNameImagePostRequest(BaseModel):
    imageData: bytes = Field(
        ...,
        description='Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.',
    )


class FieldProjectIdDetectIterationsPublishedNameImageNostorePostRequest(BaseModel):
    imageData: bytes = Field(
        ...,
        description='Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB.',
    )


class ImagePrediction(BaseModel):
    created: Optional[datetime] = Field(
        None, description='Date this prediction was created.'
    )
    id: Optional[UUID] = Field(None, description='Prediction Id.')
    iteration: Optional[UUID] = Field(None, description='Iteration Id.')
    predictions: Optional[List[Prediction]] = Field(
        None, description='List of predictions.'
    )
    project: Optional[UUID] = Field(None, description='Project Id.')
